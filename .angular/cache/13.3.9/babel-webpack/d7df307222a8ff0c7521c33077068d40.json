{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as actions from '../todo.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"inputFisico\"];\nexport let TodoItemComponent = /*#__PURE__*/(() => {\n  class TodoItemComponent {\n    constructor(store) {\n      this.store = store;\n      this.check = new FormControl();\n      this.txtInput = new FormControl();\n      this.isEdit = false;\n    }\n\n    ngOnInit() {\n      var _a, _b;\n\n      this.check = new FormControl((_a = this.todo) === null || _a === void 0 ? void 0 : _a.isComplete);\n      this.txtInput = new FormControl((_b = this.todo) === null || _b === void 0 ? void 0 : _b.text, Validators.required);\n      this.check.valueChanges.subscribe(valor => {\n        var _a;\n\n        this.store.dispatch(actions.toggle({\n          id: (_a = this.todo) === null || _a === void 0 ? void 0 : _a.id\n        }));\n      });\n    }\n\n    borrar() {\n      var _a;\n\n      this.store.dispatch(actions.borrar({\n        id: (_a = this.todo) === null || _a === void 0 ? void 0 : _a.id\n      }));\n    }\n\n    editar() {\n      var _a;\n\n      this.isEdit = true;\n      this.txtInput.setValue((_a = this.todo) === null || _a === void 0 ? void 0 : _a.text);\n      setTimeout(() => {\n        var _a;\n\n        (_a = this.txtInputFisico) === null || _a === void 0 ? void 0 : _a.nativeElement.select();\n      }, 1);\n    }\n\n    terminarEdicion() {\n      var _a, _b;\n\n      this.isEdit = false;\n\n      if (this.txtInput.invalid) {\n        return;\n      }\n\n      if (this.txtInput.value === ((_a = this.todo) === null || _a === void 0 ? void 0 : _a.text)) {\n        return;\n      }\n\n      this.store.dispatch(actions.editar({\n        id: (_b = this.todo) === null || _b === void 0 ? void 0 : _b.id,\n        text: this.txtInput.value\n      }));\n    }\n\n  }\n\n  TodoItemComponent.ɵfac = function TodoItemComponent_Factory(t) {\n    return new (t || TodoItemComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n\n  TodoItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoItemComponent,\n    selectors: [[\"app-todo-item\"]],\n    viewQuery: function TodoItemComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.txtInputFisico = _t.first);\n      }\n    },\n    inputs: {\n      todo: \"todo\"\n    },\n    decls: 8,\n    vars: 7,\n    consts: [[1, \"view\"], [\"type\", \"checkbox\", 1, \"toggle\", 3, \"formControl\"], [3, \"dblclick\"], [1, \"destroy\", 3, \"click\"], [\"type\", \"text\", 1, \"edit\", 3, \"formControl\", \"blur\"], [\"inputFisico\", \"\"]],\n    template: function TodoItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"li\")(1, \"div\", 0);\n        i0.ɵɵelement(2, \"input\", 1);\n        i0.ɵɵelementStart(3, \"label\", 2);\n        i0.ɵɵlistener(\"dblclick\", function TodoItemComponent_Template_label_dblclick_3_listener() {\n          return ctx.editar();\n        });\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TodoItemComponent_Template_button_click_5_listener() {\n          return ctx.borrar();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"blur\", function TodoItemComponent_Template_input_blur_6_listener() {\n          return ctx.terminarEdicion();\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"completed\", ctx.todo == null ? null : ctx.todo.isComplete)(\"editing\", ctx.isEdit);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.check);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.todo == null ? null : ctx.todo.text);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.txtInput);\n      }\n    },\n    directives: [i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i2.DefaultValueAccessor],\n    styles: [\"\"]\n  });\n  return TodoItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}