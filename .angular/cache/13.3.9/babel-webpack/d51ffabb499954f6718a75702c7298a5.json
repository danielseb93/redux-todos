{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { crear, toggle, editar, borrar, toggleAll, limpiarCompletados } from './todo.actions';\nimport { Todo } from './models/todo.model'; //Iniciador de estado\n\nexport const initialState = [new Todo('Salvar el mundo'), new Todo('Comprar guitarra'), new Todo('RevisiÃ³n App')];\nexport const _todoReducer = createReducer(initialState, on(borrar, (state, {\n  id\n}) => state.filter(todo => todo.id !== id)), on(crear, (state, {\n  text\n}) => [...state, new Todo(text)]), on(toggle, (state, {\n  id\n}) => {\n  return state.map(todo => {\n    if (todo.id === id) {\n      return Object.assign(Object.assign({}, todo), {\n        isComplete: !todo.isComplete\n      });\n    } else {\n      return todo;\n    }\n  });\n}), on(editar, (state, {\n  id,\n  text\n}) => {\n  return state.map(todo => {\n    if (todo.id === id) {\n      return Object.assign(Object.assign({}, todo), {\n        text: text\n      });\n    } else {\n      return todo;\n    }\n  });\n}), on(toggleAll, (state, {\n  completado\n}) => state.map(todo => {\n  return Object.assign(Object.assign({}, todo), {\n    isComplete: completado\n  });\n})), on(limpiarCompletados, state => state.filter(todo => !todo.isComplete)));","map":null,"metadata":{},"sourceType":"module"}